name: Playwright API Checks

on: 
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: "APP URL, to run tests against"
        required: true
        default: https://www.automationexercise.com
permissions:
  contents: write
  pages: write

jobs:
  e2e-tests:
    permissions:
      contents: read
      pages: write      
      id-token: write  
    timeout-minutes: 60
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    env: 
      ENVIRONMENT: ${{ github.event.inputs.environment }}
      SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_TOKEN }}

    steps: 
      - uses: actions/checkout@v3

      - name: Install jq and hub
        run: |
          sudo apt update
          sudo apt install jq rsync

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: npm ci --ignore-scripts
      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'


      - name: Set Environment Variables
        if: env.ENVIRONMENT == null
        run: | 
          echo "ENVIRONMENT=https://www.automationexercise.com" >> $GITHUB_ENV  
                
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Playwright tests
        run: npm run test
      
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
      
      - name: Configure Pages
        uses: actions/configure-pages@v2
        if: always()
     
      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v2
     
      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'playwright-report/'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      - name: Read Summary Report to Get Test Results
        if: always()
        run: |
          chmod +x ./summary.json
          PASSED=$(cat ./summary.json | jq -r '.passed | length')
          echo "PASSED=$PASSED" >> $GITHUB_ENV 
          FAILURES=$(cat ./summary.json | jq -r '.failed | length')
          echo "FAILURES=$FAILURES" >> $GITHUB_ENV 


      - uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.MSTEAMS_WEBHOOK }}
          show-on-start: true
          show-on-failure: true          
          environment: ${{ env.ENVIRONMENT }}
          enable-review-diffs-action: false
          include-files: false

          custom-facts: |
            - name: Passed
              value: "${{ env.PASSED }}"
            - name: Failures
              value: "${{ env.FAILURES }}"
          custom-actions: |
            - text: View PR
              url: "https://github.com/BMayhew/playwright-demo/pull/${{ github.pull_id }}"
            - text: View Run
              url: "https://github.com/BMayhew/playwright-demo/actions/runs/${{ github.run_id }}"
