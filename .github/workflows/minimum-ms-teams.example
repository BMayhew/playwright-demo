name: Playwright API Checks

on: 
  pull_request:

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env: 
      SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_TOKEN }}

    steps: 
      - uses: actions/checkout@v3

      - name: Install jq
        run: |
          sudo apt update
          sudo apt install jq

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
    
      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: npm ci --ignore-scripts
      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
   
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Playwright tests
        run: npm run test
      
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

      - name: Read Summary Report to Get Test Results
        if: always()
        run: |
          chmod +x ./summary.json
          PASSED=$(cat ./summary.json | jq -r '.passed | length')
          echo "PASSED=$PASSED" >> $GITHUB_ENV 
          FAILURES=$(cat ./summary.json | jq -r '.failed | length')
          echo "FAILURES=$FAILURES" >> $GITHUB_ENV 

      - name: Notify MS Teams on Success
        if: success()
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }} # this will use the runner's token.
          ms-teams-webhook-uri: ${{ secrets.MSTEAMS_WEBHOOK }}
          notification-summary: Results &#x2705; ${{ env.PASSED }} | &#x274C; ${{ env.FAILURES }}
          notification-color: 28a745
          timezone: America/Chicago

      - name: Notify MS Teams on Failure
        if: failure()
        uses: jdcargile/ms-teams-notification@v1.3
        with:
          github-token: ${{ github.token }} 
          ms-teams-webhook-uri: ${{ secrets.MSTEAMS_WEBHOOK }}
          notification-summary: Results &#x2705; ${{ env.PASSED }} | &#x274C; ${{ env.FAILURES }}
          notification-color: dc3545
          timezone: America/Chicago
